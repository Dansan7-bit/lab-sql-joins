-- Active: 1721290976264@@127.0.0.1@3306@sakila
USE sakila
--1)List the number of films per category.--

SELECT c.name,COUNT(film_id) 
FROM category AS c
JOIN film_category AS fc
ON c.category_id = fc.category_id
GROUP BY c.name


--Retrieve the store ID, city, and country for each store.
SELECT s.store_id, c.city, co.country
FROM store AS s
JOIN address AS a
ON s.address_id = a.address_id
JOIN city AS c
ON a.city_id = c.city_id
JOIN country AS co
ON c.country_id = co.country_id


--Calculate the total revenue generated by each store in dollars.


SELECT c.store_id, SUM(p.amount)
FROM payment AS p
JOIN customer AS c
ON p.customer_id = c.customer_id
GROUP BY c.store_id


--Determine the average running time of films for each category.

SELECT c.name, AVG(length)
FROM category AS c
JOIN film_category AS fc
ON c.category_id = fc.category_id
JOIN film AS f
ON fc.film_id = f.film_id
GROUP BY c.name


--Identify the film categories with the longest average running time.

SELECT c.name, AVG(length)
FROM category AS c
JOIN film_category AS fc
ON c.category_id = fc.category_id
JOIN film AS f
ON fc.film_id = f.film_id
GROUP BY c.name
ORDER BY AVG(length) DESC


--Display the top 10 most frequently rented movies in descending order.

SELECT title, COUNT(title)
FROM film
JOIN inventory
ON film.film_id = inventory.film_id
JOIN rental
ON inventory.inventory_id = rental.inventory_id
GROUP BY title
ORDER BY COUNT(title) DESC
LIMIT 10


--Determine if "Academy Dinosaur" can be rented from Store 1.

SELECT title,store_id
FROM film
JOIN inventory
ON film.film_id = inventory.film_id
GROUP BY title,store_id
HAVING title = "Academy Dinosaur"

--Provide a list of all distinct film titles, along with their availability status in the inventory.
--Include a column indicating whether each title is 'Available' or 'NOT available.' 
--Note that there are 42 titles that are not in the inventory, 
--and this information can be obtained using a CASE statement combined with IFNULL."

SELECT DISTINCT film.title,
CASE 
    WHEN title IS NULL THEN "NOT available"
    ELSE "Available"
END AS "availability"
FROM film
LEFT JOIN inventory
ON film.film_id = inventory.film_id






